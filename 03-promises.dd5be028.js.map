{"mappings":"YAAA,IAAMA,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,wBAClCE,YAAaH,SAASC,cAAc,0BACpCG,WAAYJ,SAASC,cAAc,UAGrC,SAASI,EAAcC,EAAUC,GAE/B,IAAMC,EAAU,IAAIC,SAAQ,SAACC,EAASC,GAEpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEM,SAAAV,EAAUW,MAAAV,IAIpBI,EAAO,CAAEK,SAAAV,EAAUW,MAAAV,G,GAGpBA,E,IASN,OANCC,EAAQU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACxBG,QAAQC,IAAI,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAEzDM,OAAM,SAAAJ,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,QAAQC,IAAI,sBAAqCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,IAErDT,C,CAGRV,EAAKM,WAAWoB,iBAAiB,UAEjC,SAA6BC,GAC7BA,EAAMC,iBAEJ,IAAMC,EAAaC,OAAO9B,EAAKC,WAAW8B,OACpCC,EAASF,OAAO9B,EAAKK,YAAY0B,OAEvCd,YAAW,WACT,IAAMgB,EAAOH,OAAO9B,EAAKI,UAAU2B,OAC/BG,EAAY,EAChB,IAAKC,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAE5B5B,EAAc,CAAC4B,GADfD,GAAaD,E,GAGdJ,E","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name = \"step\"]'),\n  amountInput: document.querySelector('input[name = \"amount\"]'),\n  formSubmit: document.querySelector('.form'),\n}\n\nfunction createPromise(position, delay) {\n \n  const promise = new Promise((resolve, reject) => {\n    \n    const shouldResolve = Math.random() > 0.3;\n    \n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill  \n        resolve({ position, delay });\n      }\n      else {\n        // Reject\n        reject({ position, delay });\n      }\n         \n    }, delay)\n  })\n \n  promise.then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n return promise;\n}\n\nrefs.formSubmit.addEventListener('submit', handleCreatePromise);\n\nfunction handleCreatePromise(event) {\nevent.preventDefault();\n\n  const delayFirst = Number(refs.delayInput.value);\n  const amount = Number(refs.amountInput.value);\n  \n  setTimeout(() => {\n    const step = Number(refs.stepInput.value);\n    let delayNext = 0;\n    for (i = 1; i <= amount; i += 1) {\n      delayNext += step;\n      createPromise([i], delayNext);\n      }\n  }, delayFirst) \n}\n\n\n\n"],"names":["$ce04d3a99e08e73b$var$refs","delayInput","document","querySelector","stepInput","amountInput","formSubmit","$ce04d3a99e08e73b$var$createPromise","position1","delay1","promise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","console","log","concat","catch","addEventListener","event","preventDefault","delayFirst","Number","value","amount","step","delayNext","i"],"version":3,"file":"03-promises.dd5be028.js.map"}