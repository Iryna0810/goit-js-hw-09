{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAoBhC,OAlBiB,IAAIC,SAAQ,CAACC,EAASC,KAEpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EAEFF,EAAQ,C,SAAEH,E,MAAUC,IAIpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAG5BA,EAAM,G,CAnBMQ,SAASC,cAAc,SA4B/BC,iBAAiB,UAE5B,SAA6BC,GAC7BA,EAAMC,iBAEJ,MAAMC,EAAaC,OAAOH,EAAMI,OAAOf,MAAMgB,OAEvCC,EAASH,OAAOH,EAAMI,OAAOE,OAAOD,OACpCE,EAAOJ,OAAOH,EAAMI,OAAOG,KAAKF,OACpC,IAAIG,EAAYN,EAChB,IAAK,IAAIO,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAChCtB,EAAc,CAACsB,GAAID,GAChBE,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,IAEzEyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QAAQ,sBAAoB3B,QAAeC,MAAU,IAEzEmB,GAAaD,C","sources":["src/js/03-promises.js"],"sourcesContent":["const formSubmit = document.querySelector('.form');\n\n\nfunction createPromise(position, delay) {\n \n  const promise = new Promise((resolve, reject) => {\n    \n    const shouldResolve = Math.random() > 0.3;\n    \n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill  \n        resolve({ position, delay });\n      }\n      else {\n        // Reject\n        reject({ position, delay });\n      }\n         \n    }, delay)\n  })\n \n\n return promise;\n}\n\nimport Notiflix from 'notiflix';\n\nformSubmit.addEventListener('submit', handleCreatePromise);\n\nfunction handleCreatePromise(event) {\nevent.preventDefault();\n\n  const delayFirst = Number(event.target.delay.value);\n  \n  const amount = Number(event.target.amount.value);\n  const step = Number(event.target.step.value);\n    let delayNext = delayFirst;\n    for (let i = 1; i <= amount; i += 1) {\n      createPromise([i], delayNext)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      delayNext += step;\n      }\n}\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delayFirst","Number","target","value","amount","step","delayNext","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.99f92155.js.map"}